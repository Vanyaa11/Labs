"use client";
import React, { useEffect, useState } from "react";
import Search from "./Search";
import Switcher from "./Switcher";
import AppsContainer from "./AppsContainer";
import UserInfo from "./UserInfo";
import { APPS } from "@/public/Data";
import { useTranslation } from "@/app/i18n/client";
import { COMPANIES } from "@/public/Data";
import CompaniesContainer from "./CompaniesContainer";
import { PlusIcon } from "@heroicons/react/20/solid";
interface SidebarProps {
  lng: string;
  isActive: boolean;
  setIsActive: (active: boolean) => void;
  router: any;
  pathName: any;
}

const Sidebar = ({
  lng,
  isActive,
  setIsActive,
  router,
  pathName,
}: SidebarProps) => {
  const [search, setSearch] = useState<string>("");
  const { t } = useTranslation(lng, "client-page");
  const [isSafariMobile, setIsSafariMobile] = useState(false);

  // useEffect(() => {
  //   const checkIsSafariMobile = () => {
  //     const isSafari =
  //       typeof window !== 'undefined' &&
  //       /iPad|iPhone|iPod/.test(navigator.userAgent) &&
  //       !window.hasOwnProperty('safari');

  //     setIsSafariMobile(isSafari);
  //   };

  //   checkIsSafariMobile();
  // }, []);
  // ...

  useEffect(() => {
    const checkIsSafariMobile = () => {
      const isSafariMobile =
        typeof window !== "undefined" &&
        /iPhone|iPad|iPod|Safari/.test(navigator.userAgent) &&
        !/Chrome|CriOS|FxiOS|Firefox/.test(navigator.userAgent);

      setIsSafariMobile(isSafariMobile);
    };

    checkIsSafariMobile();
  }, []);

  // console.log(pathName, "=> pathName");

  return (
    <aside
      className={`sticky pt-8 top-0 left-0 sm:w-[320px] relative flex flex-col justify-between  h-screen shrink-0 sm:block bg-sideBarBg shadow-right hideScrollbar
      ${
        isActive
          ? "w-full h-full transition-all duration-200 overflow-hidden"
          : "w-[0%] transition-all duration-200"
      }`}
    >
      <div className={`overflow-hidden`}>
        {/* <h2 className="text-center sm:text-left text-base md:text-lg font-semibold px-5">
          {t("applications")}
        </h2> */}
        <div className="flex items-center justify-between mr-4">
        <h2 className="text-center sm:text-left text-base md:text-lg font-semibold px-5">
          Companies
        </h2>
        <button
          type="button"
          className="flex items-center justify-center w-[46px] h-[46px] rounded-md p-1.5 text-white btn-plus-company  focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600"
        >
          <PlusIcon className="h-5 w-5" aria-hidden="true" />
        </button>
        </div>

        <div className="flex flex-col gap-y-5">
          <div className="flex flex-col gap-y-5 px-5 mt-[20px]">
            {/* <Search setSearch={setSearch} search={search} lng={lng} />
            <Switcher lng={lng} /> */}
            {pathName === "/en/companies/1" ||
            pathName === "/en/companies/2" ||
            pathName === "/ua/companies/1" ||
            pathName === "/ua/companies/2" ? (
              <CompaniesContainer
                isActive={isActive}
                setIsActive={setIsActive}
                companies={COMPANIES}
                search={search}
                lng={lng}
              />
            ) : (
              <AppsContainer
                isActive={isActive}
                setIsActive={setIsActive}
                apps={APPS}
                search={search}
                lng={lng}
              />
            )}
          </div>
        </div>
      </div>
      <div
        className={`sm:hidden   ${isSafariMobile ? "mb-[142px]" : "mb-[65px]"}`}
      >
        <UserInfo
          pathName={pathName}
          router={router}
          t={t}
          isSideBar={isActive}
          lng={lng}
        />
      </div>
    </aside>
  );
};

export default Sidebar;




import React from "react";
import Image from "next/image";
import logoIcon from "../public/logo.svg";
import Dropdown from "./Dropdown";
import { languages } from "../app/i18n/settings";
import SquareMenu from "./SquareMenu";
import UserInfo from "./UserInfo";
import Link from "next/link";
import OpenSidebarBtn from "./OpenSidebarBtn";

interface HeaderProps {
  t: (text: string) => string;
  lng: string;
  isActive: boolean;
  setIsActive: (active: boolean) => void;
  router: any;
  pathName: any;
}

const Header = ({ t, lng, isActive, setIsActive, router, pathName }: HeaderProps) => {
  return (
    <header
      className="sticky z-10 top-0 laft-0 w-full flex gap-x-4 justify-center sm:justify-between lg:gap-x-6 px-5 sm:px-10 min-h-[65px] 
bg-gradient-to-br from-darkBlue from-0% via-blue via-50% to-darkBlue to-100%"
    >
      <div className="flex items-center gap-x-2">
      <OpenSidebarBtn active={isActive} setActive={setIsActive} /> 
       <Link href={`/${lng}/apps/1`}><Image src={logoIcon} className="h-10 w-10" alt="logo" /></Link>
        <h3 className="text-base text-gradient-static">
          <Link href={`/${lng}/apps/1`}> <span className="mr-0.5 font-bigJohn">WIP</span></Link>
          <Link href={`/${lng}/apps/1`}><span className="font-robotoLight">SQUARE</span></Link>
        </h3>
        <SquareMenu />
      </div>
      <div className="flex gap-x-2 items-center">
        <UserInfo t={t} lng={lng} router={router} pathName={pathName}/>
      </div>
    </header>
  );
};

export default Header;




import React from "react";
import editIcon from "../public/icons/edit.svg";
import Dropdown from "./Dropdown";
import { languages } from "../app/i18n/settings";


interface UserInfoProps {
  t: (text: string) => string;
  lng: string;
  isSideBar?: boolean;
  router: any;
  pathName: any;
}
const UserInfo = ({ t, isSideBar, lng, router, pathName }: UserInfoProps) => {

  const userNavigation = [
    { name: t("your_profile"), href: `/${lng}/` },
    { name: t("sign_out"), href: `/${lng}/` },
  ];
  const companyNavigation = [
    { name: "The Second Company", description: t("user"), href: `/${lng}/` },
    { name: "Dummy Company Name", description: t("developer"), href: `/${lng}` },
    {
      name: t("edit_companies"),
      href: `/${lng}/companies/1`,
      icon: editIcon,
    },
  ];



  const handleLanguageChange = (language: string) => {
    const newPath = pathName.replace(/^\/[a-z]{2}(?=\/|$)/, `/${language}`);
    const newUrl = `${language}${pathName}`;
    router.push(newPath, newUrl);

};

  return (
    <div
      className={`${
        isSideBar
          ? " flex sm:hidden px-5 bg-gray-200 py-2 "
          : "relative hidden sm:flex gap-x-4 lg:gap-x-16"
      } w-full items-center justify-between `}
    >
      <Dropdown
        userNavigation={companyNavigation}
        openUp={isSideBar ? true : false}
      >
        <div className="flex items-center">
          <div
            className={`text-xs sm:text-sm ${
              isSideBar ? "text-black" : "text-white"
            } flex flex-col items-start`}
          >
            <h4>Deloitte Advisory s.r.o</h4>
            <span className="text-xxs sm:text-xs">{t("user")}</span>
          </div>
        </div>
      </Dropdown>
      <div className="flex items-center">
      <Dropdown
          userNavigation={userNavigation}
          openUp={isSideBar ? true : false}
        >
          <img
            className="h-8 w-8 rounded-full bg-gray-50"
            src="https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80"
            alt=""
          />
          <span className="hidden lg:flex lg:items-center">
            <span
              className="ml-4 text-sm leading-6 text-white"
              aria-hidden="true"
            >
              Tom Cook
            </span>
          </span>
        </Dropdown>
        <Dropdown
                    openUp={isSideBar ? true : false}
                    userNavigation={languages
                        .filter((l) => lng !== l)
                        .map((l) => ({
                            name: l,
                            onClick: () => handleLanguageChange(l),
                            href: `/${l}${pathName.replace(
                                /^\/[a-z]{2}\b/,
                                '',
                            )}`,
                        }))}
                >
                    <span className="sm:text-white text-black uppercase text-sm">
                        {lng}
                    </span>
                </Dropdown>
      </div>
    </div>
  );
};

export default UserInfo;


<div className="flex flex-row justify-between  gap-y-[14px] flex-wrap lg:gap-x-[10vw] md:gap-x-[5vw]">
            <h4 className="font-semibold text-base md:text-xl lg-text:2xl w-[200px]">

