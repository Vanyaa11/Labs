"use client";

import { useLocales } from "@/locales";
import {
  Box,
  Button,
  TextField,
  Typography,
  useMediaQuery,
  useTheme,
} from "@mui/material";
import React, { useState } from "react";
import { Api_urls } from "@/Services/api_urls";

export default function Footer() {
  const { currentLang, translate } = useLocales();
    const [email, setEmail] = useState("");
  const [isValidEmail, setIsValidEmail] = useState(true);
  const isFarsi = currentLang.value == "fa" ? true : false;

  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down("sm"));

  const handleTitleFontFamily = () => {
    const font = currentLang.value == "fa" ? "BTraffic" : "Oswald";
    return font;
  };

  const handleContentFontFamily = () => {
    const font = currentLang.value == "fa" ? "IRANSharp" : "Lato";
    return font;
  };

  async function sendEmail(email:string) {
    try {
      const response = await fetch(Api_urls.email.sendEmail, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify({ email }),
      });
  
      if (!response.ok) {
        throw new Error(`Email sending failed with status: ${response.status}`);
      }
  
      const responseData = await response.json();
      return responseData;
    } catch (error) {
      console.error("Error sending email:", error);
      throw error;
    }
  }

  const handleSubmitClick = async () => {

    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

    if (!emailRegex.test(email)) {
      setIsValidEmail(false);
      return;
    }

    try {
      const result = await sendEmail(email);
      console.log("successfully", result);
    } catch (error) {
      console.error("Error sending email", error);
    }
  };
  
  
  return (
    <Box
      sx={{
        overflow: "hidden",
        background: "white",
        px: { md: 3, xs: 1 },
        // pt: 3,
      }}
    >
      <Box sx={{ mb: 2, border: "1px solid black" }} />
      <Box display="flex">
        {!isMobile && (
          <Box display="flex">
            <Box
              component="img"
              src="/images/atlas-black-big.png"
              sx={{ width: 190, height: 160 }}
            />
          </Box>
        )}
        <Box
          justifyContent="center"
          textAlign="center"
          sx={{ px: 1, width: "100%" }}
        >
          <Typography
            sx={{
              fontFamily: handleTitleFontFamily(),
              fontWeight: isFarsi ? 700 : 300,
              fontSize: "18px",
              mb: 1,
            }}
          >
            {translate("footerTitle")}
          </Typography>
          <Box
            display="flex"
            justifyContent="center"
            textAlign="center"
            sx={{ pb: 2, mb: 2 }}
          >
            <TextField
              size="small"
              sx={{
                mr: 2,
                width: "400px",
                fontFamily: handleContentFontFamily(),
              }}
              placeholder={translate("enterEmail")}
              onChange={(e) => {
                setEmail(e.target.value);
                setIsValidEmail(true); 
              }}
            />
            <Button
              variant="contained"
              sx={{
                px: 6,
                background: "#0097B1",
                fontFamily: handleContentFontFamily(),
              }}
              onClick={handleSubmitClick}
            >
              {translate("submit")}
            </Button>
          </Box>
          <Box
            display="flex"
            justifyContent={isMobile ? "space-between" : "center"}
            textAlign="center"
            sx={{ pb: 2 }}
          >
            {isMobile && (
              <Box display="flex">
                <Box
                  component="img"
                  src="/images/atlas-black-big.png"
                  sx={{
                    width: 100,
                    height: 80,
                  }}
                />
              </Box>
            )}
            <Box display="block">
              <Typography
                sx={{
                  fontFamily: handleTitleFontFamily(),
                  fontWeight: isFarsi ? 700 : 300,
                  fontSize: "18px",
                  mb: 1,
                }}
              >
                {translate("followUs")}
              </Typography>
              <Box display="flex" justifyContent="center" textAlign="center">
                <Box
                  component="img"
                  src="/images/twitter.png"
                  sx={{ width: 42, height: 42, mr: 2, cursor: "pointer" }}
                  onClick={() =>
                    window.open("https://twitter.com/iranprisonatlas?lang=fa")
                  }
                />
                <Box
                  component="img"
                  src="/images/instagram.png"
                  sx={{ width: 45, height: 45, mr: 2, cursor: "pointer" }}
                  onClick={() =>
                    window.open("https://www.instagram.com/iranprisonatlas/")
                  }
                />
                <Box
                  component="img"
                  src="/images/telegram.png"
                  sx={{ width: 45, height: 45, cursor: "pointer" }}
                  onClick={() => window.open("https://t.me/iranprisonatlas")}
                />
              </Box>
            </Box>
          </Box>
        </Box>
      </Box>
    </Box>
  );
}


sendEmail: (language: string) =>
    urlCat(HOST.concat("/api/send-email-test"), { language }),



